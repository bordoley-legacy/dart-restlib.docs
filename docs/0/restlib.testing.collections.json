{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villains = new Set();\n    villains.add('Joker');\n    villains.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element,\nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n\n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n\n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe\n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[NoSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","name":"package:restlib_testing/collections.dart","id":"restlib.testing.collections","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StackTester","id":"StackTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doStackTest","id":"_doStackTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Stack","refId":"restlib.common.collections/Stack"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/stack_tester.dart","line":"6"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size","uri":"package:restlib_testing/src/collections/stack_tester.dart","line":"6"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"6"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"12"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetTail","id":"testGetTail2()","children":[{"ref":{"name":"Stack","refId":"restlib.common.collections/Stack"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"14"},{"kind":"method","name":"testStack","id":"testStack0()","line":"28"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"4"}],"uri":"package:restlib_testing/src/collections/stack_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"SequenceTester","id":"SequenceTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doSequenceTest","id":"_doSequenceTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Sequence","refId":"restlib.common.collections/Sequence"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/sequence_tester.dart","line":"6"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size","uri":"package:restlib_testing/src/collections/sequence_tester.dart","line":"6"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"6"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"12"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetReversed","id":"testGetReversed2()","children":[{"ref":{"name":"Sequence","refId":"restlib.common.collections/Sequence"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"14"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testIndexOf","id":"testIndexOf2()","children":[{"ref":{"name":"Sequence","refId":"restlib.common.collections/Sequence"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"25"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testSubSequence","id":"testSubSequence2()","children":[{"ref":{"name":"Sequence","refId":"restlib.common.collections/Sequence"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"32"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testSequence","id":"testSequence0()","line":"42"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"4"}],"uri":"package:restlib_testing/src/collections/sequence_tester.dart","line":"3"},{"superclass":{"name":"Object+MutableAssociativeTester+MutableCollectionTester+SequenceTester+AssociativeTester+IterableTester","refId":"restlib.testing.collections/Object+MutableAssociativeTester+MutableCollectionTester+SequenceTester+AssociativeTester+IterableTester"},"kind":"class","name":"MutableSequenceTester","id":"MutableSequenceTester","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"18"},{"kind":"method","name":"testMutableSequence","id":"testMutableSequence0()","line":"21"},{"ref":{"name":"ElementGenerator","refId":"restlib.testing.collections/ElementGenerator"},"kind":"variable","name":"elementGenerator","id":"elementGenerator","line":"11"},{"kind":"variable","name":"generator","id":"generator","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"invalidKey","id":"invalidKey","line":"13"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"14"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"16"}],"uri":"package:restlib_testing/src/collections/mutable_sequence_tester.dart","line":"3"},{"superclass":{"name":"Object+MutableAssociativeTester+AssociativeTester+DictionaryTester+IterableTester","refId":"restlib.testing.collections/Object+MutableAssociativeTester+AssociativeTester+DictionaryTester+IterableTester"},"kind":"class","name":"MutableDictionaryTester","id":"MutableDictionaryTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"15"},{"kind":"method","name":"testMutableDictionary","id":"testMutableDictionary0()","line":"18"},{"kind":"variable","name":"generator","id":"generator","line":"10"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"11"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"12"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"13"}],"uri":"package:restlib_testing/src/collections/mutable_dictionary_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"MutableCollectionTester","id":"MutableCollectionTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"6"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testAdd","id":"testAdd0()","line":"9"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testAddAll","id":"testAddAll0()","line":"24"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testClear","id":"testClear0()","line":"43"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testRemove","id":"testRemove0()","line":"60"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testMutableCollection","id":"testMutableCollection0()","line":"83"},{"ref":{"name":"ElementGenerator","refId":"restlib.testing.collections/ElementGenerator"},"kind":"property","name":"elementGenerator","id":"elementGenerator","line":"7"}],"uri":"package:restlib_testing/src/collections/mutable_collection_tester.dart","line":"5"},{"returnType":{"name":"MutableCollection","refId":"restlib.common.collections.mutable/MutableCollection"},"kind":"typedef","name":"MutableCollectionGenerator","id":"MutableCollectionGenerator","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"uri":"package:restlib_testing/src/collections/mutable_collection_tester.dart","line":"3"},{"superclass":{"name":"Object+MutableAssociativeTester+AssociativeTester+BiMapTester+IterableTester","refId":"restlib.testing.collections/Object+MutableAssociativeTester+AssociativeTester+BiMapTester+IterableTester"},"kind":"class","name":"MutableBiMapTester","id":"MutableBiMapTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"15"},{"kind":"method","name":"testMutableBiMap","id":"testMutableBiMap0()","line":"18"},{"kind":"variable","name":"generator","id":"generator","line":"10"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"11"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"12"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"13"}],"uri":"package:restlib_testing/src/collections/mutable_bimap_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"MutableAssociativeTester","id":"MutableAssociativeTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"6"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testOperatorListAccessAssignment","id":"testOperatorListAccessAssignment0()","line":"9"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testClear","id":"testClear0()","line":"25"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testPut","id":"testPut0()","line":"45"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testPutAll","id":"testPutAll0()","line":"61"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testPutPair","id":"testPutPair0()","line":"80"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testRemoveAt","id":"testRemoveAt0()","line":"96"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testMutableAssociative","id":"testMutableAssociative0()","line":"116"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"property","name":"pairGenerator","id":"pairGenerator","line":"7"}],"uri":"package:restlib_testing/src/collections/mutable_associative_tester.dart","line":"5"},{"returnType":{"name":"MutableAssociative","refId":"restlib.common.collections.mutable/MutableAssociative"},"kind":"typedef","name":"MutableAssociativeGenerator","id":"MutableAssociativeGenerator","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"uri":"package:restlib_testing/src/collections/mutable_associative_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"MultisetTester","id":"MultisetTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doMultisetTest","id":"_doMultisetTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Multiset","refId":"restlib.common.collections/Multiset"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/multiset_tester.dart","line":"6"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size","uri":"package:restlib_testing/src/collections/multiset_tester.dart","line":"6"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"6"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"12"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetElements","id":"testGetElements2()","children":[{"ref":{"name":"Multiset","refId":"restlib.common.collections/Multiset"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"14"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetEntries","id":"testGetEntries2()","children":[{"ref":{"name":"Multiset","refId":"restlib.common.collections/Multiset"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"18"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testCount","id":"testCount2()","children":[{"ref":{"name":"Multiset","refId":"restlib.common.collections/Multiset"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"21"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testMultiset","id":"testMultiset0()","line":"25"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"4"}],"uri":"package:restlib_testing/src/collections/multiset_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"SetMultimapTester","id":"SetMultimapTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetDictionary","id":"testGetDictionary1()","children":[{"ref":{"name":"SetMultimap","refId":"restlib.common.collections/SetMultimap"},"kind":"param","name":"multimap","id":"multimap"}],"line":"55"}],"uri":"package:restlib_testing/src/collections/multimap_tester.dart","line":"54"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"SequenceMultimapTester","id":"SequenceMultimapTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetDictionary","id":"testGetDictionary1()","children":[{"ref":{"name":"SequenceMultimap","refId":"restlib.common.collections/SequenceMultimap"},"kind":"param","name":"multimap","id":"multimap"}],"line":"39"}],"uri":"package:restlib_testing/src/collections/multimap_tester.dart","line":"38"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"MultisetMultimapTester","id":"MultisetMultimapTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetDictionary","id":"testGetDictionary1()","children":[{"ref":{"name":"MultisetMultimap","refId":"restlib.common.collections/MultisetMultimap"},"kind":"param","name":"multimap","id":"multimap"}],"line":"24"}],"uri":"package:restlib_testing/src/collections/multimap_tester.dart","line":"23"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"MultimapTester","id":"MultimapTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doMultimapTest","id":"_doMultimapTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Multimap","refId":"restlib.common.collections/Multimap"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/multimap_tester.dart","line":"6"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"6"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"12"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetDictionary","id":"testGetDictionary1()","children":[{"ref":{"name":"Multimap","refId":"restlib.common.collections/Multimap"},"kind":"param","name":"multimap","id":"multimap"}],"line":"14"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testMultimap","id":"testMultimap0()","line":"16"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"4"}],"uri":"package:restlib_testing/src/collections/multimap_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"IterableTester","id":"IterableTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doIterableTest","id":"_doIterableTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/iterable_tester.dart","line":"6"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size","uri":"package:restlib_testing/src/collections/iterable_tester.dart","line":"6"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"6"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"12"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetFirst","id":"testGetFirst2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"14"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetIsEmpty","id":"testGetIsEmpty2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"22"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetLength","id":"testGetLength2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"30"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetSingle","id":"testGetSingle2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"33"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testAny","id":"testAny2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"41"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testContains","id":"testContains2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"58"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testElementAt","id":"testElementAt2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"64"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testEvery","id":"testEvery2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"74"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testExpand","id":"testExpand2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"89"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testFirstWhere","id":"testFirstWhere2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"95"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testFold","id":"testFold2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"113"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testForEach","id":"testForEach2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"116"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testJoin","id":"testJoin2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"126"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testLastWhere","id":"testLastWhere2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"137"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testMap","id":"testMap2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"147"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testReduce","id":"testReduce2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"150"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testSingleWhere","id":"testSingleWhere2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"158"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testSkip","id":"testSkip2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"170"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testSkipWhile","id":"testSkipWhile2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"183"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testTake","id":"testTake2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"188"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testTakeWhile","id":"testTakeWhile2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"202"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testToList","id":"testToList2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"207"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testToSet","id":"testToSet2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"210"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testWhere","id":"testWhere2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"220"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testIterable","id":"testIterable0()","line":"225"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"4"}],"uri":"package:restlib_testing/src/collections/iterable_tester.dart","line":"3"},{"superclass":{"name":"Object+IterableTester+StackTester","refId":"restlib.testing.collections/Object+IterableTester+StackTester"},"kind":"class","name":"ImmutableStackTester","id":"ImmutableStackTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"11"},{"kind":"method","name":"testImmutabletStack","id":"testImmutabletStack0()","line":"14"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"8"},{"kind":"variable","name":"generator","id":"generator","line":"9"}],"uri":"package:restlib_testing/src/collections/immutable_stack_tester.dart","line":"3"},{"superclass":{"name":"Object+ImmutableCollectionTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableCollectionTester+IterableTester"},"kind":"class","name":"ImmutableSetTester","id":"ImmutableSetTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"15"},{"kind":"method","name":"testImmutableSet","id":"testImmutableSet0()","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"addCount","id":"addCount","line":"8"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"addAllCount","id":"addAllCount","line":"9"},{"ref":{"name":"ElementGenerator","refId":"restlib.testing.collections/ElementGenerator"},"kind":"variable","name":"elementGenerator","id":"elementGenerator","line":"10"},{"kind":"variable","name":"generator","id":"generator","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeCount","id":"removeCount","line":"12"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"13"}],"uri":"package:restlib_testing/src/collections/immutable_set_tester.dart","line":"3"},{"superclass":{"name":"Object+ImmutableAssociativeTester+ImmutableCollectionTester+SequenceTester+AssociativeTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableAssociativeTester+ImmutableCollectionTester+SequenceTester+AssociativeTester+IterableTester"},"kind":"class","name":"ImmutableSequenceTester","id":"ImmutableSequenceTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"24"},{"kind":"method","name":"testImmutableSequence","id":"testImmutableSequence0()","line":"27"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"addCount","id":"addCount","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"addAllCount","id":"addAllCount","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertCount","id":"insertCount","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertAllCount","id":"insertAllCount","line":"15"},{"ref":{"name":"ElementGenerator","refId":"restlib.testing.collections/ElementGenerator"},"kind":"variable","name":"elementGenerator","id":"elementGenerator","line":"16"},{"kind":"variable","name":"generator","id":"generator","line":"17"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"18"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeCount","id":"removeCount","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeAtCount","id":"removeAtCount","line":"21"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"22"}],"uri":"package:restlib_testing/src/collections/immutable_sequence_tester.dart","line":"3"},{"superclass":{"name":"Object+ImmutableCollectionTester+MultisetTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableCollectionTester+MultisetTester+IterableTester"},"kind":"class","name":"ImmutableMultisetTester","id":"ImmutableMultisetTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"15"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testImmutableMultiset","id":"testImmutableMultiset0()","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"addCount","id":"addCount","line":"8"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"addAllCount","id":"addAllCount","line":"9"},{"ref":{"name":"ElementGenerator","refId":"restlib.testing.collections/ElementGenerator"},"kind":"variable","name":"elementGenerator","id":"elementGenerator","line":"10"},{"kind":"variable","name":"generator","id":"generator","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeCount","id":"removeCount","line":"12"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"13"}],"uri":"package:restlib_testing/src/collections/immutable_multiset_tester.dart","line":"3"},{"superclass":{"name":"Object+ImmutableMultimapTester+SetMultimapTester+MultimapTester+ImmutableAssociativeTester+AssociativeTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableMultimapTester+SetMultimapTester+MultimapTester+ImmutableAssociativeTester+AssociativeTester+IterableTester"},"kind":"class","name":"ImmutableSetMultimapTester","id":"ImmutableSetMultimapTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"116"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testImmutableSetMultimap","id":"testImmutableSetMultimap0()","line":"119"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertCount","id":"insertCount","line":"108"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertAllCount","id":"insertAllCount","line":"109"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeAtCount","id":"removeAtCount","line":"110"},{"kind":"variable","name":"generator","id":"generator","line":"111"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"112"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"113"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"114"}],"uri":"package:restlib_testing/src/collections/immutable_multimap_tester.dart","line":"99"},{"superclass":{"name":"Object+ImmutableMultimapTester+SequenceMultimapTester+MultimapTester+ImmutableAssociativeTester+AssociativeTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableMultimapTester+SequenceMultimapTester+MultimapTester+ImmutableAssociativeTester+AssociativeTester+IterableTester"},"kind":"class","name":"ImmutableSequenceMultimapTester","id":"ImmutableSequenceMultimapTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"87"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testImmutableSequenceMultimap","id":"testImmutableSequenceMultimap0()","line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertCount","id":"insertCount","line":"79"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertAllCount","id":"insertAllCount","line":"80"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeAtCount","id":"removeAtCount","line":"81"},{"kind":"variable","name":"generator","id":"generator","line":"82"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"83"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"84"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"85"}],"uri":"package:restlib_testing/src/collections/immutable_multimap_tester.dart","line":"70"},{"superclass":{"name":"Object+ImmutableMultimapTester+MultisetMultimapTester+MultimapTester+ImmutableAssociativeTester+AssociativeTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableMultimapTester+MultisetMultimapTester+MultimapTester+ImmutableAssociativeTester+AssociativeTester+IterableTester"},"kind":"class","name":"ImmutableMultisetMultimapTester","id":"ImmutableMultisetMultimapTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"56"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testImmutableMultisetMultimap","id":"testImmutableMultisetMultimap0()","line":"59"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertCount","id":"insertCount","line":"48"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertAllCount","id":"insertAllCount","line":"49"},{"kind":"variable","name":"generator","id":"generator","line":"50"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"51"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"52"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeAtCount","id":"removeAtCount","line":"53"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"54"}],"uri":"package:restlib_testing/src/collections/immutable_multimap_tester.dart","line":"39"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ImmutableMultimapTester","id":"ImmutableMultimapTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"7"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testRemoveAt","id":"testRemoveAt0()","line":"9"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testImmutableMultimap","id":"testImmutableMultimap0()","line":"30"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"property","name":"pairGenerator","id":"pairGenerator","line":"4"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"removeAtCount","id":"removeAtCount","line":"5"}],"uri":"package:restlib_testing/src/collections/immutable_multimap_tester.dart","line":"3"},{"superclass":{"name":"Object+ImmutableAssociativeTester+AssociativeTester+DictionaryTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableAssociativeTester+AssociativeTester+DictionaryTester+IterableTester"},"kind":"class","name":"ImmutableDictionaryTester","id":"ImmutableDictionaryTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"18"},{"kind":"method","name":"testImmutableDictionary","id":"testImmutableDictionary0()","line":"21"},{"kind":"variable","name":"generator","id":"generator","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertCount","id":"insertCount","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertAllCount","id":"insertAllCount","line":"12"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"13"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeAtCount","id":"removeAtCount","line":"15"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"16"}],"uri":"package:restlib_testing/src/collections/immutable_dictionary_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ImmutableCollectionTester","id":"ImmutableCollectionTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"9"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testAdd","id":"testAdd0()","line":"11"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testAddAll","id":"testAddAll0()","line":"24"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testRemove","id":"testRemove0()","line":"41"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testImmutableCollection","id":"testImmutableCollection0()","line":"61"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"addCount","id":"addCount","line":"4"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"addAllCount","id":"addAllCount","line":"5"},{"ref":{"name":"ElementGenerator","refId":"restlib.testing.collections/ElementGenerator"},"kind":"property","name":"elementGenerator","id":"elementGenerator","line":"6"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"removeCount","id":"removeCount","line":"7"}],"uri":"package:restlib_testing/src/collections/immutable_collection_tester.dart","line":"3"},{"superclass":{"name":"Object+ImmutableAssociativeTester+AssociativeTester+BiMapTester+IterableTester","refId":"restlib.testing.collections/Object+ImmutableAssociativeTester+AssociativeTester+BiMapTester+IterableTester"},"kind":"class","name":"ImmutableBiMapTester","id":"ImmutableBiMapTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"18"},{"kind":"method","name":"testImmutableBiMap","id":"testImmutableBiMap0()","line":"21"},{"kind":"variable","name":"generator","id":"generator","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertCount","id":"insertCount","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"insertAllCount","id":"insertAllCount","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"removeAtCount","id":"removeAtCount","line":"13"},{"kind":"variable","name":"invalidKey","id":"invalidKey","line":"14"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"variable","name":"pairGenerator","id":"pairGenerator","line":"15"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"testSizes","id":"testSizes","line":"16"}],"uri":"package:restlib_testing/src/collections/immutable_bimap_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ImmutableAssociativeTester","id":"ImmutableAssociativeTester","children":[{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"9"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testPut","id":"testPut0()","line":"11"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testPutAll","id":"testPutAll0()","line":"25"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testPutPair","id":"testPutPair0()","line":"42"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testRemoveAt","id":"testRemoveAt0()","line":"56"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testImmutableAssociative","id":"testImmutableAssociative0()","line":"74"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"insertCount","id":"insertCount","line":"4"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"insertAllCount","id":"insertAllCount","line":"5"},{"ref":{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"},"kind":"property","name":"pairGenerator","id":"pairGenerator","line":"6"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"removeAtCount","id":"removeAtCount","line":"7"}],"uri":"package:restlib_testing/src/collections/immutable_associative_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"PairGenerator","refId":"restlib.testing.collections/PairGenerator"}],"kind":"class","name":"SequencePairGenerator","id":"SequencePairGenerator","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reset","id":"reset0()","line":"30"},{"returnType":{"name":"Pair","refId":"restlib.common.collections/Pair"},"kind":"method","name":"next","id":"next0()","line":"34"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_index","id":"_index","isPrivate":true,"line":"28"}],"uri":"package:restlib_testing/src/collections/generators.dart","line":"27"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"ElementGenerator","refId":"restlib.testing.collections/ElementGenerator"}],"kind":"class","name":"SequenceElementGenerator","id":"SequenceElementGenerator","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reset","id":"reset0()","line":"16"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"next","id":"next0()","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_index","id":"_index","isPrivate":true,"line":"14"}],"uri":"package:restlib_testing/src/collections/generators.dart","line":"13"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ElementGenerator","id":"ElementGenerator","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reset","id":"reset0()","line":"9"},{"kind":"method","name":"next","id":"next0()","line":"10"}],"uri":"package:restlib_testing/src/collections/generators.dart","line":"8"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"PairGenerator","id":"PairGenerator","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reset","id":"reset0()","line":"4"},{"returnType":{"name":"Pair","refId":"restlib.common.collections/Pair"},"kind":"method","name":"next","id":"next0()","line":"5"}],"uri":"package:restlib_testing/src/collections/generators.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"DictionaryTester","id":"DictionaryTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doDictionaryTest","id":"_doDictionaryTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Associative","refId":"restlib.common.collections/Associative"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/dictionary_tester.dart","line":"7"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"7"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"13"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testAsMap","id":"testAsMap1()","children":[{"ref":{"name":"Dictionary","refId":"restlib.common.collections/Dictionary"},"kind":"param","name":"dictionary","id":"dictionary"}],"line":"15"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testDictionary","id":"testDictionary0()","line":"40"},{"kind":"property","name":"invalidKey","id":"invalidKey","line":"4"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"5"}],"uri":"package:restlib_testing/src/collections/dictionary_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"BiMapTester","id":"BiMapTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doBiMapTest","id":"_doBiMapTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"BiMap","refId":"restlib.common.collections/BiMap"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/bimap_tester.dart","line":"6"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size","uri":"package:restlib_testing/src/collections/bimap_tester.dart","line":"6"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"6"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"12"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testGetInverse","id":"testGetInverse2()","children":[{"ref":{"name":"BiMap","refId":"restlib.common.collections/BiMap"},"kind":"param","name":"testData","id":"testData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"14"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testBiMap","id":"testBiMap0()","line":"20"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"4"}],"uri":"package:restlib_testing/src/collections/bimap_tester.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"AssociativeTester","id":"AssociativeTester","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doAssociativeTest","id":"_doAssociativeTest2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"testDescription","id":"testDescription"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"func","id":"func","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Associative","refId":"restlib.common.collections/Associative"},"kind":"param","name":"testData","id":"testData","uri":"package:restlib_testing/src/collections/associative_tester.dart","line":"9"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"9"},{"kind":"method","name":"generateTestData","id":"generateTestData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"size","id":"size"}],"line":"15"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testContainsKey","id":"testContainsKey1()","children":[{"ref":{"name":"Associative","refId":"restlib.common.collections/Associative"},"kind":"param","name":"testData","id":"testData"}],"line":"17"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testContainValues","id":"testContainValues1()","children":[{"ref":{"name":"Associative","refId":"restlib.common.collections/Associative"},"kind":"param","name":"testCase","id":"testCase"}],"line":"23"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testMapValues","id":"testMapValues1()","children":[{"ref":{"name":"Associative","refId":"restlib.common.collections/Associative"},"kind":"param","name":"testCase","id":"testCase"}],"line":"29"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testOperatorListAccess","id":"testOperatorListAccess1()","children":[{"ref":{"name":"Associative","refId":"restlib.common.collections/Associative"},"kind":"param","name":"testCase","id":"testCase"}],"line":"58"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"testAssociative","id":"testAssociative0()","line":"64"},{"kind":"property","name":"invalidKey","id":"invalidKey","line":"6"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"testSizes","id":"testSizes","line":"7"}],"uri":"package:restlib_testing/src/collections/associative_tester.dart","line":"5"}],"uri":"package:restlib_testing/collections.dart","line":"1"}