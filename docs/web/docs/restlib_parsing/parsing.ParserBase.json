{"name":"ParserBase","qualifiedName":"restlib_parsing/parsing.ParserBase","comment":"","isAbstract":true,"superclass":"dart-core.Object","implements":["restlib_parsing/parsing.Parser"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"restlib_parsing/parsing.ParserBase.ParserBase-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":true,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{"+":{"name":"+","qualifiedName":"restlib_parsing/parsing.ParserBase.+","comment":"","commentFrom":"parsing.Parser.+","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"collections.Tuple","inner":[]}]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"^":{"name":"^","qualifiedName":"restlib_parsing/parsing.ParserBase.^","comment":"","commentFrom":"parsing.Parser.^","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"collections.Either","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]},{"outer":"dynamic","inner":[]}]}]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"|":{"name":"|","qualifiedName":"restlib_parsing/parsing.ParserBase.|","comment":"","commentFrom":"parsing.Parser.|","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"flatMap":{"name":"flatMap","qualifiedName":"restlib_parsing/parsing.ParserBase.flatMap","comment":"","commentFrom":"parsing.Parser.flatMap","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"followedBy":{"name":"followedBy","qualifiedName":"restlib_parsing/parsing.ParserBase.followedBy","comment":"","commentFrom":"parsing.Parser.followedBy","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}],"parameters":{"p":{"name":"p","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"many":{"name":"many","qualifiedName":"restlib_parsing/parsing.ParserBase.many","comment":"<p>p* in EBNF.</p>","commentFrom":"parsing.Parser.many","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}]}],"parameters":{},"annotations":[]},"many1":{"name":"many1","qualifiedName":"restlib_parsing/parsing.ParserBase.many1","comment":"<p>p+ in EBNF.</p>","commentFrom":"parsing.Parser.many1","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}]}],"parameters":{},"annotations":[]},"map":{"name":"map","qualifiedName":"restlib_parsing/parsing.ParserBase.map","comment":"","commentFrom":"parsing.Parser.map","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"optional":{"name":"optional","qualifiedName":"restlib_parsing/parsing.ParserBase.optional","comment":"","commentFrom":"parsing.Parser.optional","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"collections.Option","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}]}],"parameters":{},"annotations":[]},"orElse":{"name":"orElse","qualifiedName":"restlib_parsing/parsing.ParserBase.orElse","comment":"","commentFrom":"parsing.Parser.orElse","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}],"parameters":{"alternative":{"name":"alternative","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parse":{"name":"parse","qualifiedName":"restlib_parsing/parsing.ParserBase.parse","comment":"","commentFrom":"parsing.Parser.parse","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.ParseResult","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}],"parameters":{"str":{"name":"str","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parseAsync":{"name":"parseAsync","qualifiedName":"restlib_parsing/parsing.ParserBase.parseAsync","comment":"","commentFrom":"parsing.Parser.parseAsync","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"restlib_parsing/parsing.AsyncParseResult","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}]}],"parameters":{"bytes":{"name":"bytes","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Stream","inner":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"value":"null","annotations":[]},"convert":{"name":"convert","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parseFrom":{"name":"parseFrom","qualifiedName":"restlib_parsing/parsing.ParserBase.parseFrom","comment":"","commentFrom":"parsing.Parser.parseFrom","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.ParseResult","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}],"parameters":{"str":{"name":"str","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.IterableString","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parseValue":{"name":"parseValue","qualifiedName":"restlib_parsing/parsing.ParserBase.parseValue","comment":"","commentFrom":"parsing.Parser.parseValue","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}],"parameters":{"str":{"name":"str","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"sepBy":{"name":"sepBy","qualifiedName":"restlib_parsing/parsing.ParserBase.sepBy","comment":"","commentFrom":"parsing.Parser.sepBy","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}]}],"parameters":{"delim":{"name":"delim","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"sepBy1":{"name":"sepBy1","qualifiedName":"restlib_parsing/parsing.ParserBase.sepBy1","comment":"","commentFrom":"parsing.Parser.sepBy1","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_parsing/parsing.ParserBase.T","inner":[]}]}]}],"parameters":{"delim":{"name":"delim","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"restlib_parsing/parsing.ParserBase.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>restlib_parsing/parsing.ParserBase.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"restlib_parsing/parsing.ParserBase.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"restlib_parsing/parsing.ParserBase.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>restlib_parsing/parsing.ParserBase.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>restlib_parsing/parsing.ParserBase.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"+":{"name":"+","qualifiedName":"restlib_parsing/parsing.ParserBase.+","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.+","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"collections.Tuple","inner":[]}]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"^":{"name":"^","qualifiedName":"restlib_parsing/parsing.ParserBase.^","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.^","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"collections.Either","inner":[{"outer":"dart-core.int","inner":[]},{"outer":"dynamic","inner":[]}]}]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"|":{"name":"|","qualifiedName":"restlib_parsing/parsing.ParserBase.|","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.|","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"restlib_parsing/parsing.Parser.T","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"restlib_parsing/parsing.ParserBase.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"restlib_parsing/parsing.ParserBase.noSuchMethod","comment":"<p><a>restlib_parsing/parsing.ParserBase.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>restlib_parsing/parsing.ParserBase.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>restlib_parsing/parsing.ParserBase.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>restlib_parsing/parsing.ParserBase.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"flatMap":{"name":"flatMap","qualifiedName":"restlib_parsing/parsing.ParserBase.flatMap","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.flatMap","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"followedBy":{"name":"followedBy","qualifiedName":"restlib_parsing/parsing.ParserBase.followedBy","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.followedBy","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"p":{"name":"p","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"many":{"name":"many","qualifiedName":"restlib_parsing/parsing.ParserBase.many","comment":"<p>p* in EBNF.</p>","commentFrom":"","inheritedFrom":"parsing.Parser.many","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{},"annotations":[]},"many1":{"name":"many1","qualifiedName":"restlib_parsing/parsing.ParserBase.many1","comment":"<p>p+ in EBNF.</p>","commentFrom":"","inheritedFrom":"parsing.Parser.many1","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{},"annotations":[]},"map":{"name":"map","qualifiedName":"restlib_parsing/parsing.ParserBase.map","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.map","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"optional":{"name":"optional","qualifiedName":"restlib_parsing/parsing.ParserBase.optional","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.optional","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"collections.Option","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{},"annotations":[]},"orElse":{"name":"orElse","qualifiedName":"restlib_parsing/parsing.ParserBase.orElse","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.orElse","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"alternative":{"name":"alternative","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser.T","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parse":{"name":"parse","qualifiedName":"restlib_parsing/parsing.ParserBase.parse","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.parse","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.ParseResult","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"str":{"name":"str","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parseAsync":{"name":"parseAsync","qualifiedName":"restlib_parsing/parsing.ParserBase.parseAsync","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.parseAsync","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"restlib_parsing/parsing.AsyncParseResult","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{"bytes":{"name":"bytes","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Stream","inner":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"value":"null","annotations":[]},"convert":{"name":"convert","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parseValue":{"name":"parseValue","qualifiedName":"restlib_parsing/parsing.ParserBase.parseValue","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.parseValue","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"str":{"name":"str","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parseFrom":{"name":"parseFrom","qualifiedName":"restlib_parsing/parsing.ParserBase.parseFrom","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.parseFrom","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.ParseResult","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"str":{"name":"str","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.IterableString","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"sepBy":{"name":"sepBy","qualifiedName":"restlib_parsing/parsing.ParserBase.sepBy","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.sepBy","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{"delim":{"name":"delim","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"sepBy1":{"name":"sepBy1","qualifiedName":"restlib_parsing/parsing.ParserBase.sepBy1","comment":"","commentFrom":"","inheritedFrom":"parsing.Parser.sepBy1","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_parsing/parsing.Parser","inner":[{"outer":"dart-core.Iterable","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{"delim":{"name":"delim","optional":false,"named":false,"default":false,"type":[{"outer":"restlib_parsing/parsing.Parser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{"T":{"name":"T","type":"dart.core.Object"}}}