{"name":"ForwardingResource","qualifiedName":"restlib_server/restlib-server.ForwardingResource","comment":"","isAbstract":true,"superclass":"dart-core.Object","implements":["restlib_server/restlib-server.Resource","restlib_server/restlib-server.Forwarder"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"route":{"name":"route","qualifiedName":"restlib_server/restlib-server.ForwardingResource.route","comment":"","commentFrom":"restlib-server-io.Resource.route","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib_server/restlib-server.Route","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"filterRequest":{"name":"filterRequest","qualifiedName":"restlib_server/restlib-server.ForwardingResource.filterRequest","comment":"","commentFrom":"restlib-server-io.Resource.filterRequest","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib-core-http.Request","inner":[]}],"parameters":{"request":{"name":"request","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Request","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"filterResponse":{"name":"filterResponse","qualifiedName":"restlib_server/restlib-server.ForwardingResource.filterResponse","comment":"","commentFrom":"restlib-server-io.Resource.filterResponse","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"restlib-core-http.Response","inner":[]}],"parameters":{"response":{"name":"response","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Response","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"handle":{"name":"handle","qualifiedName":"restlib_server/restlib-server.ForwardingResource.handle","comment":"","commentFrom":"restlib-server-io.Resource.handle","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"restlib-core-http.Response","inner":[]}]}],"parameters":{"request":{"name":"request","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Request","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"acceptMessage":{"name":"acceptMessage","qualifiedName":"restlib_server/restlib-server.ForwardingResource.acceptMessage","comment":"","commentFrom":"restlib-server-io.Resource.acceptMessage","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"restlib-core-http.Response","inner":[]}]}],"parameters":{"request":{"name":"request","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Request","inner":[{"outer":"restlib_server/restlib-server.ForwardingResource.T","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"restlib_server/restlib-server.ForwardingResource.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>restlib_server/restlib-server.ForwardingResource.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"restlib_server/restlib-server.ForwardingResource.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"route":{"name":"route","qualifiedName":"restlib_server/restlib-server.ForwardingResource.route","comment":"","commentFrom":"","inheritedFrom":"restlib-server.Resource.route","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_server/restlib-server.Route","inner":[]}],"parameters":{},"annotations":[]},"delegate":{"name":"delegate","qualifiedName":"restlib_server/restlib-server.ForwardingResource.delegate","comment":"","commentFrom":"","inheritedFrom":"restlib-server.Forwarder.delegate","static":false,"abstract":true,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"restlib_server/restlib-server.ForwardingResource.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>restlib_server/restlib-server.ForwardingResource.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>restlib_server/restlib-server.ForwardingResource.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"restlib_server/restlib-server.ForwardingResource.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"restlib_server/restlib-server.ForwardingResource.noSuchMethod","comment":"<p><a>restlib_server/restlib-server.ForwardingResource.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>restlib_server/restlib-server.ForwardingResource.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>restlib_server/restlib-server.ForwardingResource.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>restlib_server/restlib-server.ForwardingResource.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"filterRequest":{"name":"filterRequest","qualifiedName":"restlib_server/restlib-server.ForwardingResource.filterRequest","comment":"","commentFrom":"","inheritedFrom":"restlib-server.Resource.filterRequest","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-core-http.Request","inner":[]}],"parameters":{"request":{"name":"request","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Request","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"filterResponse":{"name":"filterResponse","qualifiedName":"restlib_server/restlib-server.ForwardingResource.filterResponse","comment":"","commentFrom":"","inheritedFrom":"restlib-server.Resource.filterResponse","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-core-http.Response","inner":[]}],"parameters":{"response":{"name":"response","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Response","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"handle":{"name":"handle","qualifiedName":"restlib_server/restlib-server.ForwardingResource.handle","comment":"","commentFrom":"","inheritedFrom":"restlib-server.Resource.handle","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"restlib-core-http.Response","inner":[]}]}],"parameters":{"request":{"name":"request","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Request","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"acceptMessage":{"name":"acceptMessage","qualifiedName":"restlib_server/restlib-server.ForwardingResource.acceptMessage","comment":"","commentFrom":"","inheritedFrom":"restlib-server.Resource.acceptMessage","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"restlib-core-http.Response","inner":[]}]}],"parameters":{"request":{"name":"request","optional":false,"named":false,"default":false,"type":[{"outer":"restlib-core-http.Request","inner":[{"outer":"restlib_server/restlib-server.Resource.T","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{"T":{"name":"T","type":"dart.core.Object"}}}