{"name":"PartContentInfo","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo","comment":"","isAbstract":true,"superclass":"dart-core.Object","implements":["restlib_core/restlib-core-http.ContentInfo"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"customHeaders":{"name":"customHeaders","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.customHeaders","comment":"","commentFrom":"restlib-core-multipart.PartContentInfo.customHeaders","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-common-collections.Dictionary","inner":[{"outer":"restlib_core/restlib-core-http.Header","inner":[]},{"outer":"dynamic","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"with_":{"name":"with_","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.with_","comment":"","commentFrom":"restlib-core-http.ContentInfo.with_","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_core/restlib-core-multipart.PartContentInfo","inner":[]}],"parameters":{"customHeaders":{"name":"customHeaders","optional":true,"named":true,"default":false,"type":[{"outer":"restlib-common-collections.Dictionary","inner":[{"outer":"restlib_core/restlib-core-http.Header","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":"null","annotations":[]},"encodings":{"name":"encodings","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_core/restlib-core-data.ContentEncoding","inner":[]}]}],"value":"null","annotations":[]},"languages":{"name":"languages","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_core/restlib-core-data.Language","inner":[]}]}],"value":"null","annotations":[]},"length":{"name":"length","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"location":{"name":"location","optional":true,"named":true,"default":false,"type":[{"outer":"restlib_core/restlib-core-net.URI","inner":[]}],"value":"null","annotations":[]},"mediaRange":{"name":"mediaRange","optional":true,"named":true,"default":false,"type":[{"outer":"restlib_core/restlib-core-data.MediaRange","inner":[]}],"value":"null","annotations":[]},"range":{"name":"range","optional":true,"named":true,"default":false,"type":[{"outer":"restlib_core/restlib-core-data.ContentRange","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"without":{"name":"without","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.without","comment":"","commentFrom":"restlib-core-http.ContentInfo.without","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_core/restlib-core-http.ContentInfo","inner":[]}],"parameters":{"customHeaders":{"name":"customHeaders","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"encodings":{"name":"encodings","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"languages":{"name":"languages","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"length":{"name":"length","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"location":{"name":"location","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"mediaRange":{"name":"mediaRange","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"range":{"name":"range","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>restlib_core/restlib-core-multipart.PartContentInfo.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"encodings":{"name":"encodings","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.encodings","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.encodings","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-common-collections.Sequence","inner":[{"outer":"restlib_core/restlib-core-data.ContentEncoding","inner":[]}]}],"parameters":{},"annotations":[]},"languages":{"name":"languages","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.languages","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.languages","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-common-collections.FiniteSet","inner":[{"outer":"restlib_core/restlib-core-data.Language","inner":[]}]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.length","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.length","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-common-collections.Option","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{},"annotations":[]},"location":{"name":"location","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.location","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.location","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-common-collections.Option","inner":[{"outer":"restlib_core/restlib-core-net.URI","inner":[]}]}],"parameters":{},"annotations":[]},"mediaRange":{"name":"mediaRange","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.mediaRange","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.mediaRange","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-common-collections.Option","inner":[{"outer":"restlib_core/restlib-core-data.MediaRange","inner":[]}]}],"parameters":{},"annotations":[]},"range":{"name":"range","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.range","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.range","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib-common-collections.Option","inner":[{"outer":"restlib_core/restlib-core-data.ContentRange","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>restlib_core/restlib-core-multipart.PartContentInfo.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>restlib_core/restlib-core-multipart.PartContentInfo.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"restlib-core-http.ContentInfo.toString","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.noSuchMethod","comment":"<p><a>restlib_core/restlib-core-multipart.PartContentInfo.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>restlib_core/restlib-core-multipart.PartContentInfo.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>restlib_core/restlib-core-multipart.PartContentInfo.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>restlib_core/restlib-core-multipart.PartContentInfo.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"with_":{"name":"with_","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.with_","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.with_","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_core/restlib-core-http.ContentInfo","inner":[]}],"parameters":{"encodings":{"name":"encodings","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_core/restlib-core-data.ContentEncoding","inner":[]}]}],"value":"null","annotations":[]},"languages":{"name":"languages","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"restlib_core/restlib-core-data.Language","inner":[]}]}],"value":"null","annotations":[]},"length":{"name":"length","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"location":{"name":"location","optional":true,"named":true,"default":false,"type":[{"outer":"restlib_core/restlib-core-net.URI","inner":[]}],"value":"null","annotations":[]},"mediaRange":{"name":"mediaRange","optional":true,"named":true,"default":false,"type":[{"outer":"restlib_core/restlib-core-data.MediaRange","inner":[]}],"value":"null","annotations":[]},"range":{"name":"range","optional":true,"named":true,"default":false,"type":[{"outer":"restlib_core/restlib-core-data.ContentRange","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"without":{"name":"without","qualifiedName":"restlib_core/restlib-core-multipart.PartContentInfo.without","comment":"","commentFrom":"","inheritedFrom":"restlib-core-http.ContentInfo.without","static":false,"abstract":true,"constant":false,"return":[{"outer":"restlib_core/restlib-core-http.ContentInfo","inner":[]}],"parameters":{"encodings":{"name":"encodings","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"languages":{"name":"languages","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"length":{"name":"length","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"location":{"name":"location","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"mediaRange":{"name":"mediaRange","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"range":{"name":"range","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}